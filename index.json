[{"body":" This is a placeholder page that shows you how to use this template site.\n The Overview is where your users find out about your project. Depending on the size of your docset, you can have a separate overview page (like this one) or put your overview contents in the Documentation landing page (like in the Docsy User Guide).\nTry answering these questions for your user in this page:\nWhat is it? Introduce your project, including what it does or lets you do, why you would use it, and its primary goal (and how it achieves it). This should be similar to your README description, though you can go into a little more detail here if you want.\nWhy do I want it? Help your user know if your project will help them. Useful information can include:\n What is it good for?: What types of problems does your project solve? What are the benefits of using it?\n What is it not good for?: For example, point out situations that might intuitively seem suited for your project, but aren't for some reason. Also mention known limitations, scaling issues, or anything else that might let your users know if the project is not for them.\n What is it not yet good for?: Highlight any useful features that are coming soon.\n Where should I go next? Give your users next steps from the Overview. For example:\n Getting Started: Get started with $project Examples: Check out some example code! ","excerpt":"This is a placeholder page that shows you how to use this template site.\n The Overview is where your …","ref":"https://m4system.ca/docs/overview/","title":"Overview"},{"body":" WIP\n Install python 3.5 apt-get install python3.5-dev wget https://bootstrap.pypa.io/get-pip.py python3.5 get-pip.py\nInstall Dependancies apt-get install libmemcached-dev libsnmp-dev libmariadb3\nInstall requirements pip3.5 install -r requirements.txt\nFix mariadb librairy paths ln -s /usr/lib/arm-linux-gnueabihf/libmariadb.so.3 /usr/lib/arm-linux-gnueabihf/libmariadbclient.so.18\nThis is the final element on the page and there should be no margin below this. ","excerpt":" WIP\n Install python 3.5 apt-get install python3.5-dev wget https://bootstrap.pypa.io/get-pip.py …","ref":"https://m4system.ca/docs/tutorials/linux/","title":"Linux Setup"},{"body":" This is a placeholder page that shows you how to use this template site.\n Tutorials are complete worked examples made up of multiple tasks that guide the user through a relatively simple but realistic scenario: building an application that uses some of your project’s features, for example. If you have already created some Examples for your project you can base Tutorials on them. This section is optional. However, remember that although you may not need this section at first, having tutorials can be useful to help your users engage with your example code, especially if there are aspects that need more explanation than you can easily provide in code comments.\n","excerpt":"This is a placeholder page that shows you how to use this template site.\n Tutorials are complete …","ref":"https://m4system.ca/docs/tutorials/","title":"Tutorials"},{"body":" These basic sample guidelines assume that your Docsy site is deployed using Netlify and your files are stored in GitHub. You can use the guidelines \u0026ldquo;as is\u0026rdquo; or adapt them with your own instructions: for example, other deployment options, information about your doc project's file structure, project-specific review guidelines, versioning guidelines, or any other information your users might find useful when updating your site. Kubeflow has a great example.\nDon't forget to link to your own doc repo rather than our example site! Also make sure users can find these guidelines from your doc repo README: either add them there and link to them from this page, add them here and link to them from the README, or include them in both locations.\n We use Hugo to format and generate our website, the Docsy theme for styling and site structure, and Netlify to manage the deployment of the site. Hugo is an open-source static site generator that provides us with templates, content organisation in a standard directory structure, and a website generation engine. You write the pages in Markdown (or HTML if you want), and Hugo wraps them up into a website.\nAll submissions, including submissions by project members, require review. We use GitHub pull requests for this purpose. Consult GitHub Help for more information on using pull requests.\nQuick start with Netlify Here's a quick guide to updating the docs. It assumes you're familiar with the GitHub workflow and you're happy to use the automated preview of your doc updates:\n Fork the Goldydocs repo on GitHub. Make your changes and send a pull request (PR). If you're not yet ready for a review, add \u0026ldquo;WIP\u0026rdquo; to the PR name to indicate it's a work in progress. (Don't add the Hugo property \u0026ldquo;draft = true\u0026rdquo; to the page front matter, because that prevents the auto-deployment of the content preview described in the next point.) Wait for the automated PR workflow to do some checks. When it's ready, you should see a comment like this: deploy/netlify — Deploy preview ready! Click Details to the right of \u0026ldquo;Deploy preview ready\u0026rdquo; to see a preview of your updates. Continue updating your doc and pushing your changes until you're happy with the content. When you're ready for a review, add a comment to the PR, and remove any \u0026ldquo;WIP\u0026rdquo; markers. Updating a single page If you've just spotted something you'd like to change while using the docs, Docsy has a shortcut for you:\n Click Edit this page in the top right hand corner of the page. If you don't already have an up to date fork of the project repo, you are prompted to get one - click Fork this repository and propose changes or Update your Fork to get an up to date version of the project to edit. The appropriate page in your fork is displayed in edit mode. Follow the rest of the Quick start with Netlify process above to make, preview, and propose your changes. Previewing your changes locally If you want to run your own local Hugo server to preview your changes as you work:\n Follow the instructions in Getting started to install Hugo and any other tools you need. You'll need at least Hugo version 0.45 (we recommend using the most recent available version), and it must be the extended version, which supports SCSS.\n Fork the Goldydocs repo repo into your own project, then create a local copy using git clone. Don’t forget to use --recurse-submodules or you won’t pull down some of the code you need to generate a working site.\ngit clone --recurse-submodules --depth 1 https://github.com/google/docsy-example.git Run hugo server in the site root directory. By default your site will be available at http://localhost:1313/. Now that you're serving your site locally, Hugo will watch for changes to the content and automatically refresh your site.\n Continue with the usual GitHub workflow to edit files, commit them, push the changes up to your fork, and create a pull request.\n Creating an issue If you've found a problem in the docs, but you're not sure how to fix it yourself, please create an issue in the Goldydocs repo. You can also create an issue about a specific page by clicking the Create Issue button in the top right hand corner of the page.\nUseful resources [Docsy user guide](wherever it goes): All about Docsy, including how it manages navigation, look and feel, and multi-language support. Hugo documentation: Comprehensive reference for Hugo. Github Hello World!: A basic introduction to GitHub concepts and workflow. ","excerpt":"These basic sample guidelines assume that your Docsy site is deployed using Netlify and your files …","ref":"https://m4system.ca/docs/contribution-guidelines/","title":"Contribution Guidelines"},{"body":" Work in Progress. Feel free to contribute with a pull request!\n This section is where the user documentation for your project lives - all the information your users need to understand and successfully use your project.\nFor large documentation sets we recommend adding content under the headings in this section, though if some or all of them don’t apply to your project feel free to remove them or add your own. You can see an example of a smaller Docsy documentation site in the Docsy User Guide, which lives in the Docsy theme repo if you'd like to copy its docs section.\nOther content such as marketing material, case studies, and community updates should live in the About and Community pages.\nFind out how to use the Docsy theme in the Docsy User Guide. You can learn more about how to organize your documentation (and how we organized this site) in Organizing Your Content.\n","excerpt":"Work in Progress. Feel free to contribute with a pull request!\n This section is where the user …","ref":"https://m4system.ca/docs/","title":"Documentation"},{"body":"\nInstall Python Install vcc++ 2015 and build tools\n https://www.python.org/ftp/python/3.5.1/python-3.5.1-amd64.exe https://www.visualstudio.com/downloads/#build-tools-for-visual-studio-2019 More information on building python modules on windows here: https://wiki.python.org/moin/WindowsCompilers\nreboot\ncd to your folder\npip install -r requirements.txt Install RabbitMQ Follow the instruction here: https://www.rabbitmq.com/install-windows.html\nrabbitmqctl add_user m4 changeme rabbitmqctl add_vhost m4 rabbitmqctl set_user_tags m4 m4 rabbitmqctl set_permissions -p m4 m4 \u0026quot;.*\u0026quot; \u0026quot;.*\u0026quot; \u0026quot;.*\u0026quot; Install lessc npm install lessc -g\nSetup SNMP See: https://blog.paessler.com/how-to-enable-snmp-on-your-operating-system\nAllow localhost with community \u0026ldquo;public\u0026rdquo;\nThis will allow M4 to poll your local SNMP deamon to get some fresh data.\nSetup Django migrations , revisions, cache table, fixtures, collectstatic\nLoad the fixtures python3.5 manage.py loaddata fixtures/auth.json python3.5 manage.py loaddata fixtures/user.json python3.5 manage.py loaddata fixtures/djcelery.json python3.5 manage.py loaddata fixtures/scheduler.json python3.5 manage.py loaddata fixtures/webview.json Run M4 start.bat Login to M4 http://127.0.0.1:8000\nm4 / Changeme1!\nScreenshots Frontend notifications of polling errors\nTiles are red when in critical status\nA Threshold fails a check which fails a SLA\nCan also be a warning, where we notify but are not yet in trouble.\nMobile Friendly\nMore mobile friendliness\nComes with a backend Backend\n","excerpt":"Install Python Install vcc++ 2015 and build tools …","ref":"https://m4system.ca/docs/tutorials/windows/","title":"Install on Window (Dev)"},{"body":"","excerpt":"","ref":"https://m4system.ca/index.json","title":""},{"body":"Social Media Participate in our community and get assistance from other users.\n Facebook: Like our Facebook Page to stay current! Instagram: Share your projects and tag us ! Linkedin: Join our professional network ! Sponsoring You want to contribute but do not have the time ? Here is your solution !\n Patreon: To all our Patreon, thank you from the bottom of our heart! Paypal: Send a one time donation ! Paypal Pool: Help us gather the money needed to incorporate the company ! ","excerpt":"Social Media Participate in our community and get assistance from other users.\n Facebook: Like our …","ref":"https://m4system.ca/community/","title":"Community"},{"body":" #td-cover-block-0 { background-image: url(/featured-background_hu3155ea6ccdd1405ae5b1efb49670e314_9622670_960x540_fill_q75_catmullrom_top.jpg); } @media only screen and (min-width: 1200px) { #td-cover-block-0 { background-image: url(/featured-background_hu3155ea6ccdd1405ae5b1efb49670e314_9622670_1920x1080_fill_q75_catmullrom_top.jpg); } } Welcome to M4: An open-source monitoring system! Learn More Download Start polling ModBus, SNMP or with custom scripts in minutes!\n\n M4 provides a single web UI providing visibility into any metrics! If it's accessible from the server running the code, you can make a metric out of it. Support Us ! We work hard to deliver this project to those who need it. You would like to pitch in but you are not a programmer ? Become a Patreon!\n Contributions welcome! We do a Pull Request contributions workflow on GitHub. New users are always welcome!\nRead more …\n Follow us on Twitter! For announcement of latest features etc.\nRead more …\n Run it on the RasberyPi and use M4 to automate your workflows Quickly setup a monitoring gateway using a rasberyPi or any computer. Hop over to the documentation for the install guides. Using a Pi opens up many possibilities using the onboard GPIO and i2c port with relays and sensors.\n Get Support ! If you wish to open a support request, you can do so here!\n Check our status page! Wondering if there is a problem with our service ? Check our Status Page\n Help us with translations! We use Zanata to work collaboratively on translations.\nRead more …\n Completely modular, extend M4 System using our its plugin system Plugins are normal python module on your pythonpath. Add to INSTALLED_APPS after installing with pip and you are good to go. Anyone can submit plugins to be included in the core distribution. With Python, the only limit is you.\n ","excerpt":"#td-cover-block-0 { background-image: …","ref":"https://m4system.ca/","title":"M4"},{"body":" The Privacy Policy is Curently being reviewed. Please contact us to get an up to date copy. ","excerpt":" The Privacy Policy is Curently being reviewed. Please contact us to get an up to date copy. ","ref":"https://m4system.ca/privacy/","title":"Privacy Policy"},{"body":"","excerpt":"","ref":"https://m4system.ca/search/","title":"Search Results"},{"body":"ToS\n","excerpt":"ToS","ref":"https://m4system.ca/tos/","title":"Terms of Services"}]